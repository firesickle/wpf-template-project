<Window x:Class="DataToolkit.DataMapWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DataToolkit"
        mc:Ignorable="d"
        Title="Data Mapping Tool" Height="650" Width="1000"
        WindowStartupLocation="CenterScreen"
        Background="#1E1E1E">
    <Window.Resources>
        <!-- Value converters -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        

        <!-- Dark theme header style -->
        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="10,5"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <!-- List column style -->
        <Style x:Key="ColumnListStyle" TargetType="ListView">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="AllowDrop" Value="True"/>
        </Style>

        <!-- List column style -->
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <!-- Action button style reused from MainWindow -->
        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#5E4389"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#7254A5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="20,10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#7254A5"/>
                                <Setter Property="BorderBrush" Value="#8A6BBF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#4A3572"/>
                                <Setter Property="BorderBrush" Value="#5E4389"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Action button style reused from MainWindow -->
        <Style x:Key="SecondaryActionButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#3F3F46"/>
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="BorderBrush" Value="#555555"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#525257"/>
                                <Setter Property="BorderBrush" Value="#777777"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#323237"/>
                                <Setter Property="BorderBrush" Value="#555555"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Action icon button style -->
        <Style x:Key="IconButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Margin" Value="2,0"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#4A4A4F"/>
                                <Setter Property="BorderBrush" Value="#777777"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#555559"/>
                                <Setter Property="BorderBrush" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FilePathTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#AEAEB2"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="Margin" Value="10,0,10,5"/>
        </Style>
        
        <!-- Data Template for Input Column list items -->
        <DataTemplate x:Key="InputColumnItemTemplate">
            <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" Margin="0,2">
                <Border BorderThickness="1" CornerRadius="3" Padding="8,8">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Background" Value="#3E3E42"/>
                            <Setter Property="BorderBrush" Value="#555555"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMapped}" Value="True">
                                    <Setter Property="Background" Value="#384048"/>
                                    <Setter Property="BorderBrush" Value="#2E7D32"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Position Number -->
                        <Border Grid.Column="0" 
                                CornerRadius="2" 
                                Padding="5,3"
                                Width="32"
                                Height="26"
                                Margin="0,0,8,0">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="#007ACC"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSpecialCase}" Value="True">
                                            <Setter Property="Background" Value="#F57C00"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <TextBlock Text="{Binding InputColumnPosition}" 
                                       Foreground="White" 
                                       FontSize="12" 
                                       FontWeight="SemiBold"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>
                        </Border>

                        <!-- Column Name with Mapping Status -->
                        <StackPanel Grid.Column="1" Orientation="Vertical">
                            <TextBlock Text="{Binding InputColumnName}" 
                                       Foreground="#E0E0E0" 
                                       FontSize="14" 
                                       VerticalAlignment="Center"
                                       TextTrimming="CharacterEllipsis"/>

                            <TextBlock Text="{Binding OutputColumnName, StringFormat=→ Mapped to: {0}}"
                                       Foreground="#8BC34A"
                                       FontSize="11"
                                       FontStyle="Italic"
                                       Margin="0,3,0,0"
                                       Visibility="{Binding IsMapped, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                            <TextBlock Text="Custom Processing Applied" 
                                       Foreground="#FF9800"
                                       FontSize="11"
                                       FontStyle="Italic"
                                       Margin="0,0,0,0"
                                       Visibility="{Binding IsSpecialCase, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                            <TextBlock Text="Hard Coded Value" 
                                       Foreground="#E91E63"
                                       FontSize="11"
                                       FontStyle="Italic"
                                       Margin="0,0,0,0"
                                       Visibility="{Binding IsHardCoded, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </StackPanel>

                        <!-- Action Buttons -->
                        <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="5,2,18,2">
                            <!-- Split Column Button (Red Down Arrow) -->
                            <Button Style="{StaticResource IconButtonStyle}"
                                    ToolTip="Split column and move down"
                                    Click="OnSplitColumnClick"
                                    Visibility="{Binding IsMapped, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Viewbox Width="16" Height="16">
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M12,21L15.6,16.2H14.2V9.8H9.8V16.2H8.4L12,21M12,3L8.4,7.8H9.8V14.2H14.2V7.8H15.6L12,3Z" 
                                              Fill="#E74C3C"/>
                                    </Canvas>
                                </Viewbox>
                            </Button>

                            <!-- Settings Button (Purple Cog) -->
                            <Button Style="{StaticResource IconButtonStyle}"
                                    ToolTip="Column settings"
                                    Click="OnColumnSettingsClick">
                                <Viewbox Width="16" Height="16">
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z" 
                                              Fill="#9B59B6"/>
                                    </Canvas>
                                </Viewbox>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </DataTemplate>

        <!-- Data Template for Output Column list items -->
        <DataTemplate x:Key="OutputColumnItemTemplate">
            <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" Margin="0,2">
                <Border BorderThickness="1" CornerRadius="3" Padding="8,8">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Background" Value="#3E3E42"/>
                            <Setter Property="BorderBrush" Value="#555555"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMapped}" Value="True">
                                    <Setter Property="Background" Value="#384048"/>
                                    <Setter Property="BorderBrush" Value="#2E7D32"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Position Number -->
                        <Border Grid.Column="0" 
                                CornerRadius="2" 
                                Padding="5,3"
                                Width="32"
                                Height="26"
                                Margin="0,0,8,0">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="#007ACC"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSpecialCase}" Value="True">
                                            <Setter Property="Background" Value="#F57C00"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <TextBlock Text="{Binding OutputColumnPosition}" 
                                       Foreground="White" 
                                       FontSize="12" 
                                       FontWeight="SemiBold"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>
                        </Border>

                        <!-- Column Name with Mapping Status -->
                        <StackPanel Grid.Column="1" Orientation="Vertical">
                            <TextBlock Text="{Binding OutputColumnName}" 
                                       Foreground="#E0E0E0" 
                                       FontSize="14" 
                                       VerticalAlignment="Center"
                                       TextTrimming="CharacterEllipsis"/>

                            <TextBlock Text="{Binding InputColumnName, StringFormat=← Mapped from: {0}}"
                                       Foreground="#8BC34A"
                                       FontSize="11"
                                       FontStyle="Italic"
                                       Margin="0,3,0,0"
                                       Visibility="{Binding IsMapped, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                            <TextBlock Text="Custom Processing Applied" 
                                       Foreground="#FF9800"
                                       FontSize="11"
                                       FontStyle="Italic"
                                       Margin="0,0,0,0"
                                       Visibility="{Binding IsSpecialCase, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                            <TextBlock Text="Hard Coded Value" 
                                       Foreground="#E91E63"
                                       FontSize="11"
                                       FontStyle="Italic"
                                       Margin="0,0,0,0"
                                       Visibility="{Binding IsHardCoded, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </StackPanel>

                        <!-- Action Buttons -->
                        <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="5,2,18,2">
                            <!-- Split Column Button (Red Down Arrow) -->
                            <Button Style="{StaticResource IconButtonStyle}"
                                    ToolTip="Split column and move down"
                                    Click="OnSplitColumnClick"
                                    Visibility="{Binding IsMapped, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Viewbox Width="16" Height="16">
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M12,21L15.6,16.2H14.2V9.8H9.8V16.2H8.4L12,21M12,3L8.4,7.8H9.8V14.2H14.2V7.8H15.6L12,3Z" 
                                              Fill="#E74C3C"/>
                                    </Canvas>
                                </Viewbox>
                            </Button>

                            <!-- Settings Button (Purple Cog) -->
                            <Button Style="{StaticResource IconButtonStyle}"
                                    ToolTip="Column settings"
                                    Click="OnColumnSettingsClick">
                                <Viewbox Width="16" Height="16">
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z" 
                                              Fill="#9B59B6"/>
                                    </Canvas>
                                </Viewbox>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </DataTemplate>

        <!-- Ghost item style -->
        <DataTemplate x:Key="GhostItemTemplate">
            <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" Margin="0,2">
                <Border Background="#2A2A2F" BorderThickness="0" CornerRadius="3" Padding="8,8">
                    <Grid>
                        <Rectangle Stroke="#3F3F46" StrokeThickness="1" Fill="Transparent" RadiusX="3" RadiusY="3" Margin="-1">
                            <Rectangle.StrokeDashArray>
                                <DoubleCollection>4,2</DoubleCollection>
                            </Rectangle.StrokeDashArray>
                        </Rectangle>
                        <TextBlock Text="Drop Here to Add New Item" 
                                   Foreground="#9DAAB6" 
                                   FontSize="14" 
                                   FontStyle="Italic"
                                   HorizontalAlignment="Center"/>
                    </Grid>
                </Border>
            </Grid>
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header with information -->
        <Border Grid.Row="0" Background="#2D2D30" BorderBrush="#3F3F46" BorderThickness="0,0,0,1" Padding="15,10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Back Button -->
                <Button Grid.Column="0" 
                        Content="← Back" 
                        Style="{StaticResource SecondaryActionButtonStyle}"
                        Padding="10,5" 
                        Margin="0,0,15,0"
                        Click="OnBackButtonClick"/>

                <!-- Title -->
                <TextBlock Grid.Column="1"
                           Text="Data Mapping Configuration" 
                           Foreground="#E0E0E0" 
                           FontSize="18" 
                           FontWeight="SemiBold" 
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>

                <!-- Help Button -->
                <Button Grid.Column="2" 
                        Content="Help" 
                        Style="{StaticResource SecondaryActionButtonStyle}"
                        Padding="10,5"
                        Click="OnHelpButtonClick"/>
            </Grid>
        </Border>
        
        <Border Grid.Row="1" Background="#2D2D30" BorderBrush="#3F3F46" BorderThickness="0,0,0,1" Padding="15,10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ComboBox Grid.Column="1"
                          Name="ddlMapVersion"
                          Style="{StaticResource ComboBoxStyle}"
                          Text="Data Mapping Version" 
                          Foreground="#E0E0E0"
                          FontSize="18"
                          FontWeight="SemiBold"
                          Height="30" Width="260"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center" SelectionChanged="ddlMapVersion_SelectionChanged"/>

            </Grid>
        </Border>
        
        <!-- Main Content Area -->
        <Grid Grid.Row="2" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Input Columns List -->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="Input Columns" Style="{StaticResource HeaderTextStyle}"/>

                <!-- File path display -->
                <Border Grid.Row="1" 
                        Background="#333337" 
                        Padding="5,3" 
                        Margin="5,0,5,5" 
                        CornerRadius="3"
                        Visibility="{Binding IsInputFilePathVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock x:Name="txtInputFilePath" Text="{Binding InputFilePath}" 
                  Style="{StaticResource FilePathTextStyle}"
                  ToolTip="{Binding InputFilePath}"/>
                </Border>

                <!-- Updated ListView with AllowDrop="True" -->
                <Border Grid.Row="2" 
            BorderBrush="#3F3F46" 
            BorderThickness="1" 
            CornerRadius="3" 
            Margin="5">
                    <ListView x:Name="InputColumnsList" 
                  Style="{StaticResource ColumnListStyle}"
                  ItemTemplate="{StaticResource InputColumnItemTemplate}"
                  ItemsSource="{Binding DataMaps}"
                  PreviewMouseLeftButtonDown="InputColumnsList_PreviewMouseLeftButtonDown"
                  DragEnter="ColumnsList_DragEnter"
                  DragOver="ColumnsList_DragOver"
                  DragLeave="ColumnsList_DragLeave"
                  Drop="InputColumnsList_Drop"
                  AllowDrop="True"/>
                </Border>
            </Grid>

            <!-- Middle Controls -->
            <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="15,0">
                <Button Content="→" 
                        Style="{StaticResource ActionButtonStyle}"
                        Width="50" Height="50"
                        FontSize="20"
                        Margin="0,5"
                        Click="OnMapColumnsClick"/>

                <Button Content="←" 
                        Style="{StaticResource ActionButtonStyle}"
                        Width="50" Height="50"
                        FontSize="20"
                        Margin="0,15,0,5"
                        Click="OnUnmapColumnsClick"/>

                <Button Content="↔" 
                        Style="{StaticResource ActionButtonStyle}"
                        Width="50" Height="50"
                        FontSize="20"
                        Margin="0,15,0,5"
                        ToolTip="Auto-match columns with similar names"
                        Click="OnAutoMatchClick"/>
            </StackPanel>

            <!-- Output Columns List -->
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="Output Columns" Style="{StaticResource HeaderTextStyle}"/>

                <!-- File path display -->
                <Border Grid.Row="1" 
                        Background="#333337" 
                        Padding="5,3" 
                        Margin="5,0,5,5" 
                        CornerRadius="3"
                        Visibility="{Binding IsOutputFilePathVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock x:Name="txtOutputFilePath" Text="{Binding OutputFilePath}" 
                                Style="{StaticResource FilePathTextStyle}"
                                ToolTip="{Binding OutputFilePath}"/>
                </Border>

                <!-- Updated ListView with AllowDrop="True" -->
                <Border Grid.Row="2" 
                        BorderBrush="#3F3F46" 
                        BorderThickness="1" 
                        CornerRadius="3" 
                        Margin="5">
                    <ListView x:Name="OutputColumnsList" 
                              Style="{StaticResource ColumnListStyle}"
                              ItemTemplate="{StaticResource OutputColumnItemTemplate}"
                              ItemsSource="{Binding DataMaps}"
                              PreviewMouseLeftButtonDown="OutputColumnsList_PreviewMouseLeftButtonDown"
                              DragEnter="ColumnsList_DragEnter"
                              DragOver="ColumnsList_DragOver"
                              DragLeave="ColumnsList_DragLeave"
                              Drop="OutputColumnsList_Drop"
                              AllowDrop="True"/>
                </Border>
            </Grid>
        </Grid>

        <!-- Footer with Action Buttons -->
        <Border Grid.Row="3" Background="#2D2D30" BorderBrush="#3F3F46" BorderThickness="0,1,0,0" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Mapping statistics -->
                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0,0,0">
                    <TextBlock Text="Mapped: " Foreground="#E0E0E0"/>
                    <TextBlock Text="{Binding MappedCount}" Foreground="#E0E0E0" FontWeight="SemiBold" Margin="5,0"/>
                    <TextBlock Text=" / " Foreground="#E0E0E0"/>
                    <TextBlock Text="{Binding TotalCount}" Foreground="#E0E0E0" Margin="5,0"/>
                </StackPanel>

                <!-- Action buttons -->
                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="Reset" 
                            Style="{StaticResource SecondaryActionButtonStyle}"
                            Margin="5,0"
                            Width="100"
                            Click="OnResetButtonClick"/>

                    <Button Content="Save Mapping" 
                            Style="{StaticResource ActionButtonStyle}"
                            Margin="5,0"
                            Width="150"
                            Click="OnSaveMappingButtonClick"/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>